[{"authors":["admin"],"categories":null,"content":"Sujith brings almost 20 years of IT experience, combined with excellent communication and presentation skills. He is an efficient, analytical, positive thinking professional who has successfully demonstrated the ability of understanding business requirements, specifying systems, developing working software and Designing Azure Solutions.\nAs lead developer he has carried the full weight of the software development in medium-sized software rms in the past few years. As such he is guiding other developers, streamlining development, defining standards, organizing code reviews, exploring new technologies, etc. Having worked on the same products for several years he has developed a deeper understanding of the evolution of software.\nAs a certified Azure Solutions Architect he demonstrates skills and knowledge to advise stakeholders and translate business requirements into secure, scalable, and reliable solutions. He has advanced experience and knowledge across various aspects of IT operations, including networking, virtualization, identity, security, business continuity, disaster recovery, data management, budgeting, and governance - managing how decisions in each area affects an overall solution.\nHe is an excellent team player, capable of working under pressure and without supervision. He is well organized, self-motivated, and has demonstrated important skills in dealing with issues and resolving them prior to becoming problems. He is an easy learning person used to acquire new knowledge about customer systems, standards, tools and trends. He is eager to learn new technologies and is continuously extending his knowledge.\n","date":1531389600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1575544489,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Sujith brings almost 20 years of IT experience, combined with excellent communication and presentation skills. He is an efficient, analytical, positive thinking professional who has successfully demonstrated the ability of understanding business requirements, specifying systems, developing working software and Designing Azure Solutions.\nAs lead developer he has carried the full weight of the software development in medium-sized software rms in the past few years. As such he is guiding other developers, streamlining development, defining standards, organizing code reviews, exploring new technologies, etc.","tags":null,"title":"Sujith Quintelier","type":"authors"},{"authors":["Sujith Quintelier"],"categories":["Development"],"content":" This guide helps you setting up your Blazor development environment without messing up your current development machine with beta releases.\nWe will use these tools\n Docker Community Edition\n Visual Studio Code\n  Create a local directory with one subdirectory app.\nCreate Dockerfile First download the latest dockerfile version. Look at the latest version of Linux amd64. Copy the raw content and store it in a file Dockerfile. Modify it by appending \\ and \u0026amp;\u0026amp; dotnet new -i Microsoft.AspNetCore.Blazor.Templates at the second RUN command.\nIt should look like this:\nRUN curl -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\ \u0026amp;\u0026amp; dotnet_sha512='2166986e360f1c3456a33723edb80349e6ede115be04a6331bfbfd0f412494684d174a0cfb21d2feb00d509ce342030160a4b5b445e393ad83bedb613a64bc66' \\ \u0026amp;\u0026amp; sha512sum dotnet.tar.gz \\ \u0026amp;\u0026amp; echo \u0026quot;$dotnet_sha512 dotnet.tar.gz\u0026quot; | sha512sum -c - \\ \u0026amp;\u0026amp; mkdir -p /usr/share/dotnet \\ \u0026amp;\u0026amp; tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\ \u0026amp;\u0026amp; rm dotnet.tar.gz \\ \u0026amp;\u0026amp; ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \\ \u0026amp;\u0026amp; dotnet new -i Microsoft.AspNetCore.Blazor.Templates  Create the docker image Open a terminal and go to the location of the Dockerfile and run docker build -t blazor:latest .. This will build the docker image.\nIf this fails, just restart your docker and rerun previous command.\nbuild This builds the image.\n-t This adds a label latest.\nverify The creation of the image can be verified by docker images You should see 2 images. Base image and the one you just created.\nStart a container instance At the prompt run docker run -it --rm --name blazortest -p 8000:80 -v H:\\Euricom\\Blazor\\app\\:/app -w=\u0026quot;/app\u0026quot; blazor:latest\nrun This runs the container:\n-it This runs an interactive container.\n\u0026ndash;rm This removes the container after stopping the container.\n-p This maps the internal port (80) to an external port (8000).\n-v This maps a local path H:\\Euricom\\Blazor\\app\\ to this volume /app\n-w This sets the working directory to /app\nverify In another terminal you should see named instance blazortest\nCreate a new blazor project You can create a new Blazor project the volume created earlier by running this command dotnet new blazor.\nOpen the project file app.csproj and add this node \u0026lt;Watch Include=\u0026quot;**\\*.cshtml\u0026quot; /\u0026gt;. This makes it possible to make changes on the fly.\n\u0026lt;Project Sdk=\u0026quot;Microsoft.NET.Sdk.Web\u0026quot;\u0026gt; \u0026lt;PropertyGroup\u0026gt; \u0026lt;TargetFramework\u0026gt;netstandard2.0\u0026lt;/TargetFramework\u0026gt; \u0026lt;RunCommand\u0026gt;dotnet\u0026lt;/RunCommand\u0026gt; \u0026lt;RunArguments\u0026gt;blazor serve\u0026lt;/RunArguments\u0026gt; \u0026lt;LangVersion\u0026gt;7.3\u0026lt;/LangVersion\u0026gt; \u0026lt;/PropertyGroup\u0026gt; \u0026lt;ItemGroup\u0026gt; \u0026lt;PackageReference Include=\u0026quot;Microsoft.AspNetCore.Blazor.Browser\u0026quot; Version=\u0026quot;0.4.0\u0026quot; /\u0026gt; \u0026lt;PackageReference Include=\u0026quot;Microsoft.AspNetCore.Blazor.Build\u0026quot; Version=\u0026quot;0.4.0\u0026quot; /\u0026gt; \u0026lt;DotNetCliToolReference Include=\u0026quot;Microsoft.AspNetCore.Blazor.Cli\u0026quot; Version=\u0026quot;0.4.0\u0026quot; /\u0026gt; \u0026lt;Watch Include=\u0026quot;**\\*.cshtml\u0026quot; /\u0026gt; \u0026lt;/ItemGroup\u0026gt; \u0026lt;/Project\u0026gt;  Start the application Start the application via dotnet watch run\nLaunch the application Open a browser and launch http://localhost:8000\n","date":1531389600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575544489,"objectID":"dea9e43fb42193f2fe41bd93650a3bb1","permalink":"/post/setupblazordevenv/","publishdate":"2018-07-12T10:00:00Z","relpermalink":"/post/setupblazordevenv/","section":"post","summary":"Setup Blazor development environment","tags":["Blazor","Docker"],"title":"Setup Blazor development environment","type":"post"},{"authors":["Sujith Quintelier"],"categories":["Development"],"content":" Following this note you will be able to Create, Build and Deploy a simple Azure Function App. You create it in Visual Studio. Let it build with Teamcity and deploy it with Octopus Deploy. The needed Azure Resources will also be deployed.\nSetup Tools  Visual Studio 2017 v15.7.4 (VS). TeamCity v2017.2.4 (TC). Octopus Deploy v2018.6.2 (OD).  For this purpose I deployed a Azure VM using this template, installed an OD Tentacle, a TC Agent and OD cli (in C:\\Programs\\Octo). OD downloads can be found here. Also install the correct .NET version via this link and set the DOTNET_HOME environment variable in TC to C:\\Program Files\\dotnet\\\nMake sure you have installed the Azure development workload in VS. Check via TOOLS\\Get Tools and Features\u0026hellip; On Workloads tab check Azure development\nCreate We use VS for developing the Function. Store the project in a source control system supported by TC.\nFunction Add new Project, search for Azure Functions and give it a name. It is a basic http trigger. Nothing fancy. Modify if needed.\nInstall Nuget package Microsoft.NET.Sdk.Functions.\nARM Template Deploying an Azure Function needs 3 Azure Resources:\n Storage Account (Microsoft.Storage/storageAccounts) Hosting Plan (Microsoft.Web/serverfarms) Function App (Microsoft.Web/sites)  Below you will find a basic ARM Template with these 3 resources and a parameters Template. Set Copy to Output Directory to Copy if Newer. Add those templates to your project and name them azuredeploy.json and azuredeploy.parameters.json.\nThe project structure should look like\nTemplate { \u0026quot;$schema\u0026quot;: \u0026quot;https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\u0026quot;, \u0026quot;contentVersion\u0026quot;: \u0026quot;1.0.0.0\u0026quot;, \u0026quot;parameters\u0026quot;: { \u0026quot;appName\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;metadata\u0026quot;: { \u0026quot;description\u0026quot;: \u0026quot;The name of the function app that you wish to create.\u0026quot; } }, \u0026quot;sku\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;allowedValues\u0026quot;: [ \u0026quot;Free\u0026quot;, \u0026quot;Shared\u0026quot;, \u0026quot;Basic\u0026quot;, \u0026quot;Standard\u0026quot; ], \u0026quot;defaultValue\u0026quot;: \u0026quot;Standard\u0026quot;, \u0026quot;metadata\u0026quot;: { \u0026quot;description\u0026quot;: \u0026quot;The pricing tier for the hosting plan.\u0026quot; } }, \u0026quot;workerSize\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;allowedValues\u0026quot;: [ \u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;2\u0026quot; ], \u0026quot;defaultValue\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;metadata\u0026quot;: { \u0026quot;description\u0026quot;: \u0026quot;The instance size of the hosting plan (small, medium, or large).\u0026quot; } }, \u0026quot;storageAccountType\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;defaultValue\u0026quot;: \u0026quot;Standard_LRS\u0026quot;, \u0026quot;allowedValues\u0026quot;: [ \u0026quot;Standard_LRS\u0026quot;, \u0026quot;Standard_GRS\u0026quot;, \u0026quot;Standard_RAGRS\u0026quot; ], \u0026quot;metadata\u0026quot;: { \u0026quot;description\u0026quot;: \u0026quot;Storage Account type\u0026quot; } }, \u0026quot;location\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;defaultValue\u0026quot;: \u0026quot;[resourceGroup().location]\u0026quot;, \u0026quot;metadata\u0026quot;: { \u0026quot;description\u0026quot;: \u0026quot;Location for all resources.\u0026quot; } } }, \u0026quot;variables\u0026quot;: { \u0026quot;functionAppName\u0026quot;: \u0026quot;[parameters('appName')]\u0026quot;, \u0026quot;hostingPlanName\u0026quot;: \u0026quot;[parameters('appName')]\u0026quot;, \u0026quot;storageAccountName\u0026quot;: \u0026quot;[concat(uniquestring(resourceGroup().id), 'functions')]\u0026quot; }, \u0026quot;resources\u0026quot;: [ { \u0026quot;type\u0026quot;: \u0026quot;Microsoft.Storage/storageAccounts\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;[variables('storageAccountName')]\u0026quot;, \u0026quot;apiVersion\u0026quot;: \u0026quot;2016-12-01\u0026quot;, \u0026quot;location\u0026quot;: \u0026quot;[parameters('location')]\u0026quot;, \u0026quot;kind\u0026quot;: \u0026quot;Storage\u0026quot;, \u0026quot;sku\u0026quot;: { \u0026quot;name\u0026quot;: \u0026quot;[parameters('storageAccountType')]\u0026quot; } }, { \u0026quot;type\u0026quot;: \u0026quot;Microsoft.Web/serverfarms\u0026quot;, \u0026quot;apiVersion\u0026quot;: \u0026quot;2015-04-01\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;[variables('hostingPlanName')]\u0026quot;, \u0026quot;location\u0026quot;: \u0026quot;[parameters('location')]\u0026quot;, \u0026quot;properties\u0026quot;: { \u0026quot;name\u0026quot;: \u0026quot;[variables('hostingPlanName')]\u0026quot;, \u0026quot;sku\u0026quot;: \u0026quot;[parameters('sku')]\u0026quot;, \u0026quot;workerSize\u0026quot;: \u0026quot;[parameters('workerSize')]\u0026quot;, \u0026quot;hostingEnvironment\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;numberOfWorkers\u0026quot;: 1 } }, { \u0026quot;apiVersion\u0026quot;: \u0026quot;2015-04-01\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;Microsoft.Web/sites\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;[variables('functionAppName')]\u0026quot;, \u0026quot;location\u0026quot;: \u0026quot;[parameters('location')]\u0026quot;, \u0026quot;kind\u0026quot;: \u0026quot;functionapp\u0026quot;, \u0026quot;properties\u0026quot;: { \u0026quot;name\u0026quot;: \u0026quot;[variables('functionAppName')]\u0026quot;, \u0026quot;serverFarmId\u0026quot;: \u0026quot;[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]\u0026quot;, \u0026quot;hostingEnvironment\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;clientAffinityEnabled\u0026quot;: false, \u0026quot;siteConfig\u0026quot;: { \u0026quot;alwaysOn\u0026quot;: true } }, \u0026quot;dependsOn\u0026quot;: [ \u0026quot;[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]\u0026quot;, \u0026quot;[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\u0026quot; ], \u0026quot;resources\u0026quot;: [ { \u0026quot;apiVersion\u0026quot;: \u0026quot;2016-03-01\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;appsettings\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;config\u0026quot;, \u0026quot;dependsOn\u0026quot;: [ \u0026quot;[resourceId('Microsoft.Web/sites', variables('functionAppName'))]\u0026quot;, \u0026quot;[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]\u0026quot; ], \u0026quot;properties\u0026quot;: { \u0026quot;AzureWebJobsStorage\u0026quot;: \u0026quot;[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),'; AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]\u0026quot;, \u0026quot;AzureWebJobsDashboard\u0026quot;: \u0026quot;[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),'; AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]\u0026quot;, \u0026quot;FUNCTIONS_EXTENSION_VERSION\u0026quot;: \u0026quot;~1\u0026quot; } } ] } ] }  Parameters { \u0026quot;$schema\u0026quot;: \u0026quot;https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\u0026quot;, \u0026quot;contentVersion\u0026quot;: \u0026quot;1.0.0.0\u0026quot;, \u0026quot;parameters\u0026quot;: { \u0026quot;appName\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;#{AzureFunctionName}\u0026quot; } } }  Build In TC Create a new project, add a new Build Configuration with 3 Build Steps.\nParameters These are use in TC in scripts, variable names, \u0026hellip; * apikey (generated in OD) * packageId (tc-od) * server (url to OD) * version (semantic version nr like 1.0.%build.number%)\npublish This runner type is .NET CLI (dotnet). Give a Step name. Choose publish as Command. Select the project. Set Configuration and Output directory to bin\\Release\\PublishOutput pack This runner type is Command Line. Give a Step name. Choose Custom script and enter script below.\ncd tc-od\\bin\\Release\\PublishOutput C:\\Programs\\Octo\\octo pack --id=%packageId% --format=zip --outFolder=../dist --version=%version%  push This runner type is Command Line. Give a Step name. Choose Custom script and enter script below.\nThis pushed the zip file to OD.\ncd tc-od\\bin\\Release\\dist C:\\Programs\\Octo\\octo push --server=%server% --apiKey=%apikey% --package=%packageId%.%version%.zip  Deploy In OD make sure you have setup\n an Environment a Deployment target(in our case a Azure Web App) a Lifecycle with automatic deploy after release creation an Azure Subscription (this is needed to deploy)  Add a project.\nUnder Process add 2 steps:\n Deploy Resources Deploy Function  Deploy Resources In this step we deploy the ARM template.\nSearch for resource Group and select Deploy an Azure resource Group.\n Set Step Name Select Execution Plan Select an Azure Account and Resource Group Select File inside a package Select Package Set Paths  Deploy Function In this step we deploy the Function.\nSearch for azure web and select Deploy an Azure Web App.\n Set Step Name Select Package  This is it. Happy coding!\nResources  https://octopus.com/blog/azure-functions  ","date":1529661600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575544489,"objectID":"b175cbb0c2581f30cd881e48283cbe33","permalink":"/post/createbuildazfvstcod/","publishdate":"2018-06-22T10:00:00Z","relpermalink":"/post/createbuildazfvstcod/","section":"post","summary":"Create, build and deploy Azure Functions with Visual Studio, Teamcity and Octopus Deploy","tags":["Azure Function","Visual Studio","Teamcity","Octopus Deploy","Azure"],"title":"Create, build and deploy Azure Functions with Visual Studio, Teamcity and Octopus Deploy","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575544489,"objectID":"6d99026b9e19e4fa43d5aadf147c7176","permalink":"/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575544489,"objectID":"fd36605688ef45e10dc233c860158012","permalink":"/cv/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/cv/","section":"","summary":"","tags":null,"title":"","type":"widget_page"}]